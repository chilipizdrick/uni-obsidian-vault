#import "../lib.typ": *
#show: fix-indent()

= Заключение <conclusion>

Реализованная структура данных сжатого суффиксного дерева является одной из
наиболее эффективных структур данных в задачах связанных с анализом строк.
Реализованный в работе алгоритм Укконена построения суффиксного дерева позволяет
строить упомянутую структуру данных с пространственной и временной сложностью в
$O(n)$. Суффиксное дерево применяется в решении многих прикладных задач, таких
как анализ и индексация текстов или анализ последовательностей нуклеотидов в ДНК,
так как в таких задачах не могут возникнуть условия, при которых алгоритм будет
приближаться к временной сложности $O(n^2)$.

В то время как структура данных суффиксного дерева эффективна в задачах поиска
наибольшей общей подстроки, она также может быть использована для решения других задач,
таких как поиск всех вхождений строки в тексте, поиск похожих подстрок в строке,
нахождение всех подстрок, удовлетворяющих некоторому регулярному выражению,
поиск всех повторяющихся подстрок и других задач за линейное время.
Однако в некоторых задачах анализа строк решения при помощи суффиксного дерева могут проигрывать
в производительности другим структурам данных и соответствующим им алгоритмам.
Например алгоритм Ахо-Корасик, использующий в своей реализации конечный автомат,
позволяет за линейное количество времени решить задачу о поиске всех вхождений данного
набора строк в некоторый текст, в то время как алгоритм, использующий суффиксное дерево
в своей реализации будет использовать $O(n^2)$ времени.

